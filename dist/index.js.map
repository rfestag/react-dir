{"version":3,"sources":["../externals/react.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","DirCommon.jsx","DirObject.jsx","DirArray.jsx","DirAtomic.jsx","Dir.jsx"],"names":["module","exports","React","ReactIs","throwOnDirectAccess","require","DirDefaultStyle","color","moreColor","caretColor","ellipseColor","undefinedColor","nullColor","nanColor","booleanColor","numericColor","stringColor","fontFamily","fontSize","DirContext","createContext","More","onClick","display","propTypes","PropTypes","func","CaretLeft","width","paddingRight","CaretDown","CaretBlank","CollapsedObject","name","string","objectTitle","value","open","RegExp","toString","Date","constructor","ClosedObject","keys","Object","first","slice","last","showProperties","listStyleType","paddingLeft","map","k","i","length","object","OpenObject","count","setCount","getOwnPropertyNames","sort","margin","e","getPrototypeOf","DirObject","setOpen","CollapsedArray","ClosedArray","array","OpenArray","DirArray","DirAtomic","withCaret","any","bool","DirRoot","Dir","closed","dirContext","undefined","isNaN","Array","defaultStyle"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = React;\n} else {\n  module.exports = require('/node_modules/react');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const DirDefaultStyle = {\n  color: \"dodgerblue\",\n  moreColor: \"darkgray\",\n  caretColor: \"darkgray\",\n  ellipseColor: \"darkgray\",\n  undefinedColor: \"darkgray\",\n  nullColor: \"darkgray\",\n  nanColor: \"darkgrey\",\n  booleanColor: \"green\",\n  numericColor: \"green\",\n  stringColor: \"magenta\",\n  fontFamily: \"monospace\",\n  fontSize: 12\n};\nexport const DirContext = React.createContext(DirDefaultStyle);\nexport const More = ({ onClick }) => {\n  const { moreColor: color } = useContext(DirContext);\n  return (\n    <li onClick={onClick} style={{ display: \"inline\", color }}>\n      &#x2026;\n    </li>\n  );\n};\nMore.propTypes = {\n  onClick: PropTypes.func\n};\nexport const CaretLeft = () => {\n  const { caretColor: color } = useContext(DirContext);\n  return (\n    <span style={{ display: \"inline-block\", width: 8, paddingRight: 8, color }}>\n      {\"\\u25B6\"}\n    </span>\n  );\n};\nexport const CaretDown = () => {\n  const { caretColor: color } = useContext(DirContext);\n  return (\n    <span style={{ display: \"inline-block\", width: 8, paddingRight: 8, color }}>\n      {\"\\u25BC\"}\n    </span>\n  );\n};\nexport const CaretBlank = () => (\n  <span style={{ display: \"inline-block\", width: 8, paddingRight: 8 }} />\n);\n","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dir } from \"./Dir\";\nimport { DirContext, More, CaretLeft, CaretDown } from \"./DirCommon\";\n\nexport const CollapsedObject = ({ name }) => {\n  const { moreColor: color } = useContext(DirContext);\n  return (\n    <span>\n      {name ? `${name}:` : \"\"}\n      <span>\n        {\"{\"}\n        <span style={{ color }}>&#x2026;</span>\n        {\"}\"}\n      </span>\n    </span>\n  );\n};\nCollapsedObject.propTypes = {\n  name: PropTypes.string\n};\nconst objectTitle = (name, value, open) => {\n  if (value instanceof RegExp) {\n    return name ? `${name}: ${value}` : value.toString();\n  } else if (value instanceof Date) {\n    //TODO: Something better for value\n    return name ? `${name}: ${value}` : value.toString();\n  } else if (open) {\n    return (\n      <span>\n        {name && <span>{name}: </span>}\n        <CollapsedObject />\n      </span>\n    );\n  } else {\n    return name\n      ? `${name}: ${value.constructor.name} {`\n      : `${value.constructor.name} {`;\n  }\n};\nexport const ClosedObject = ({ name, value, onClick }) => {\n  const keys = Object.keys(value);\n  const first = keys.slice(0, 10);\n  const last = keys.slice(10);\n  const showProperties = !(value instanceof RegExp || value instanceof Date);\n\n  return (\n    <span onClick={onClick}>\n      <span>\n        <CaretLeft />\n        {objectTitle(name, value, false)}\n      </span>\n      {showProperties && (\n        <span>\n          <ul\n            style={{ listStyleType: \"none\", paddingLeft: 8, display: \"inline\" }}\n          >\n            {first.map((k, i) => {\n              return (\n                <li\n                  key={k}\n                  style={{ paddingLeft: 0, paddingRight: 8, display: \"inline\" }}\n                >\n                  <Dir\n                    value={value[k]}\n                    name={k}\n                    withCaret={false}\n                    closed={true}\n                  />\n                  {i !== first.length - 1 || last.length ? \",\" : null}\n                </li>\n              );\n            })}\n            {last.length ? <More /> : null}\n          </ul>\n          {!(value instanceof RegExp || value instanceof Date) && (\n            <span>{\"}\"}</span>\n          )}\n        </span>\n      )}\n    </span>\n  );\n};\nClosedObject.propTypes = {\n  value: PropTypes.object,\n  onClick: PropTypes.func,\n  name: PropTypes.string\n};\nexport const OpenObject = ({ name, value, onClick }) => {\n  const [count, setCount] = useState(10);\n  const keys = Object.getOwnPropertyNames(value).sort();\n  const first = keys.slice(0, count);\n  const last = keys.slice(count);\n\n  return (\n    <span>\n      <span onClick={onClick}>\n        <CaretDown />\n        {objectTitle(name, value, true)}\n      </span>\n      <ul style={{ listStyleType: \"none\", margin: 0, paddingLeft: 16 }}>\n        {first.map(k => {\n          try {\n            return (\n              <li key={k}>\n                <Dir value={value[k]} withCaret={true} name={k} />\n              </li>\n            );\n          } catch (e) {\n            return null;\n          }\n        })}\n        <Dir name=\"prototype\" value={Object.getPrototypeOf(value)} />\n        {last.length ? <More onClick={() => setCount(count + 10)} /> : null}\n      </ul>\n    </span>\n  );\n};\nOpenObject.propTypes = {\n  value: PropTypes.object,\n  onClick: PropTypes.func,\n  name: PropTypes.string\n};\n\nexport const DirObject = ({ name, value }) => {\n  const [open, setOpen] = useState(false);\n  return open ? (\n    <OpenObject onClick={() => setOpen(false)} name={name} value={value} />\n  ) : (\n    <ClosedObject onClick={() => setOpen(true)} name={name} value={value} />\n  );\n};\nDirObject.propTypes = {\n  value: PropTypes.object,\n  name: PropTypes.string\n};\n","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dir } from \"./Dir\";\nimport { DirContext, More, CaretLeft, CaretDown } from \"./DirCommon\";\n\nexport const CollapsedArray = ({ name }) => {\n  const { moreColor: color } = useContext(DirContext);\n  return (\n    <span>\n      {name ? `${name}:` : \"\"}\n      <span>\n        {\"[\"}\n        <span style={{ color }}>&#x2026;</span>\n        {\"]\"}\n      </span>\n    </span>\n  );\n};\nCollapsedArray.propTypes = {\n  name: PropTypes.string\n};\nexport const ClosedArray = ({ name, value, onClick }) => {\n  const keys = Object.keys(value);\n  const first = keys.slice(0, 10);\n  const last = keys.slice(10);\n\n  return (\n    <span onClick={onClick}>\n      <span>\n        <CaretLeft />\n        {name ? `${name}: Array (${keys.length}) [` : \"Array [\"}\n      </span>\n      <ul style={{ listStyleType: \"none\", paddingLeft: 8, display: \"inline\" }}>\n        {first.map((k, i) => {\n          return (\n            <li\n              key={k}\n              style={{ paddingLeft: 0, paddingRight: 8, display: \"inline\" }}\n            >\n              <Dir value={value[k]} withCaret={false} closed={true} />\n              {i !== first.length - 1 || last.length ? \",\" : null}\n            </li>\n          );\n        })}\n        {last.length ? <More /> : null}\n      </ul>\n      <span>{\"]\"}</span>\n    </span>\n  );\n};\nClosedArray.propTypes = {\n  value: PropTypes.array,\n  onClick: PropTypes.func,\n  name: PropTypes.string\n};\nexport const OpenArray = ({ name, value, onClick }) => {\n  const [count, setCount] = useState(10);\n  const keys = Object.keys(value).sort();\n  const first = keys.slice(0, count);\n  const last = keys.slice(count);\n\n  return (\n    <span>\n      <span onClick={onClick}>\n        <CaretDown />\n        {name && <span>{name}: </span>}\n        <CollapsedArray />\n      </span>\n      <ul style={{ listStyleType: \"none\", margin: 0, paddingLeft: 16 }}>\n        {first.map(k => (\n          <li key={k}>\n            <Dir value={value[k]} withCaret={true} name={k} />\n          </li>\n        ))}\n        {last.length ? <More onClick={() => setCount(count + 10)} /> : null}\n      </ul>\n    </span>\n  );\n};\nOpenArray.propTypes = {\n  value: PropTypes.array,\n  onClick: PropTypes.func,\n  name: PropTypes.string\n};\n\nexport const DirArray = ({ name, value }) => {\n  const [open, setOpen] = useState(false);\n  return open ? (\n    <OpenArray onClick={() => setOpen(false)} name={name} value={value} />\n  ) : (\n    <ClosedArray onClick={() => setOpen(true)} name={name} value={value} />\n  );\n};\nDirArray.propTypes = {\n  value: PropTypes.array,\n  name: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CaretBlank } from \"./DirCommon\";\n\nexport const DirAtomic = ({ name, color, withCaret, value }) => {\n  return (\n    <span>\n      {withCaret && <CaretBlank />}\n      {name && <span style={{ paddingRight: 4 }}>{name}:</span>}\n      <span style={{ color }}>{value}</span>\n    </span>\n  );\n};\nDirAtomic.propTypes = {\n  value: PropTypes.any,\n  color: PropTypes.string,\n  name: PropTypes.string,\n  withCaret: PropTypes.bool\n};\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  DirContext as dirContext,\n  DirDefaultStyle as defaultStyle\n} from \"./DirCommon\";\nimport { DirObject, CollapsedObject } from \"./DirObject\";\nimport { DirArray, CollapsedArray } from \"./DirArray\";\nimport { DirAtomic } from \"./DirAtomic\";\n\nexport const Dir = ({ name, value, withCaret, closed }) => {\n  const {\n    undefinedColor,\n    nullColor,\n    booleanColor,\n    nanColor,\n    numericColor,\n    stringColor\n  } = useContext(dirContext);\n  if (value === undefined) {\n    return (\n      <DirAtomic\n        name={name}\n        withCaret={withCaret}\n        value=\"undefined\"\n        color={undefinedColor}\n      />\n    );\n  } else if (value === null) {\n    return (\n      <DirAtomic\n        name={name}\n        withCaret={withCaret}\n        value=\"null\"\n        color={nullColor}\n      />\n    );\n  } else if (typeof value === \"boolean\") {\n    return (\n      <DirAtomic\n        name={name}\n        withCaret={withCaret}\n        value={value.toString()}\n        color={booleanColor}\n      />\n    );\n  } else if (typeof value === \"number\") {\n    return (\n      <DirAtomic\n        name={name}\n        withCaret={withCaret}\n        value={value.toString()}\n        color={isNaN(value) ? nanColor : numericColor}\n      />\n    );\n  } else if (typeof value === \"string\") {\n    return (\n      <DirAtomic\n        name={name}\n        withCaret={withCaret}\n        value={`\"${value}\"`}\n        color={stringColor}\n      />\n    );\n  } else if (value instanceof Array) {\n    return closed ? (\n      <CollapsedArray name={name} />\n    ) : (\n      <DirArray name={name} value={value} />\n    );\n  } else {\n    return closed ? (\n      <CollapsedObject name={name} />\n    ) : (\n      <DirObject name={name} value={value} />\n    );\n  }\n};\nDir.propTypes = {\n  value: PropTypes.any,\n  name: PropTypes.string,\n  withCaret: PropTypes.bool,\n  closed: PropTypes.bool\n};\n\nconst DirRoot = ({ value }) => {\n  const { color, fontSize, fontFamily } = useContext(dirContext);\n  return (\n    <div style={{ fontFamily, fontSize, color }}>\n      <Dir value={value} />\n    </div>\n  );\n};\nDirRoot.propTypes = {\n  value: PropTypes.any\n};\n\nexport const DirContext = dirContext;\nexport const DirDefaultStyle = defaultStyle;\n\nexport default DirRoot;\n"]}